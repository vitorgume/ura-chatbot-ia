name: CI → Build & Push (ECR)

on:
  push:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION:       ${{ vars.AWS_REGION || 'us-east-1' }}
  AWS_ACCOUNT_ID:   ${{ vars.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY:   ${{ vars.ECR_REPOSITORY || 'ura-chatbot-ia' }}
  JAVA_VERSION:     "21"

jobs:
  test:
    name: Testes (Maven)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: maven
      - name: Build & Test
        run: mvn -B -ntp clean verify

  build_and_push:
    name: Build & Push para ECR
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Configurar credenciais AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Garantir repositório no ECR
        shell: bash
        run: |
          set -e
          aws ecr describe-repositories --repository-names "${ECR_REPOSITORY}" >/dev/null 2>&1 \
            || aws ecr create-repository --repository-name "${ECR_REPOSITORY}" >/dev/null

      - name: Login no ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tags/labels da imagem
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value=latest
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (Docker)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Exibir URIs geradas
        run: |
          echo "Pushed tags:"
          echo "${{ steps.meta.outputs.tags }}"